nav {
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}
.navbar a {
  color: white;
}
.navbar a:hover {
  color: wheat;
}
.navbar-brand {
  color: white;
}
.custom-toggler {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255,102,203, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E");
}
/* .nav-item {
  padding-right: 50px;
} */
.navbar {
  background-color: rgb(198, 198, 42);
}

h1 {
  /* background-color: rgba(128, 128, 128, 0.221); */
  backdrop-filter: blur(2px);
  text-align: center;
  font-size: 3rem;
  color: white;
  padding: 10px 0;
  position: absolute;
  top: 110px;
  left: 320px;
  z-index: 3;
}

.container {
  /* border: yellow 4px solid; */
  margin-top: 70px;
}

.wrapper {
  position: relative;
}

section .container {
  position: relative;
  z-index: 1;
}
.pet-collage img {
  filter: brightness(80%);
}

.filter-buttons {
  /* border: 4px solid black; */
  width: auto;
}
.filter-buttons button {
  margin: 0 10px;
  width: 200px;
}

.row {
  /* border: blue 4px solid; */
  justify-content: center;
}

.render-cards-here {
  /* border: blue 4px solid; */
  margin: 15px 0;
  padding-bottom: 20px;
}

.card:hover {
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}

.card-title {
  border: 1px solid lightblue;
}

img {
  transition: transform 0.30s;
}

.card img:hover {
  transform: scale(1.07, 1.07);
}

.card-text {
  text-align: justify;
}

header {
  font-weight: bold;
}

footer {
  color: yellow;
  font-weight: bold;
  /* background-color: darkgray; */
}

h4 {
  display: flex;
  justify-content: center;
}

.add-a-pet-btn {
  z-index: 2;
  color: white;
  font-size: 3rem;
  background-color: rgb(158, 158, 246);
  width: 100px;
  height: 100px;
  border-radius: 50%;
  border: none;
  margin-bottom: 30px;
  position: -webkit-sticky;
  position: sticky;
  top: 10px;
}

/* 
====================== MODAL ======================
*/

.modal {
  z-index: 2;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 0.4rem;
  width: 700px;
  padding: 1.3rem;
  height: auto;
  position: absolute;
  top: 5%;
  transform: translate(75%, 0);
  background-color: white;
  border: 1px solid #ddd;
  border-radius: 15px;
}
.modal .flex {
  display: flex;
  align-items: center;
  justify-content: right;
}
.modal input {
  padding: 0.7rem 1rem;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-size: 0.9rem;
}
.modal p {
  font-size: 0.9rem;
  color: #777;
  margin: 0.4rem 0 0.2rem;
}

button {
  cursor: pointer;
  border: none;
  font-weight: 600;
}

.submit-btn {
  display: inline-block;
  padding: 0.8rem 1.4rem;
  font-weight: 700;
  background-color: black;
  color: yellow;
  border-radius: 5px;
  text-align: center;
  font-size: 1em;
}
.btn-open {
  /* 
    Without having left and transform, the button doesn't stay centered. This is considered a responsive way of doing this.
  */
  position: absolute;
  top: 85%;
  left: 50%;
  transform: translate(-50%, 0);
}
.btn-close {
  transform: translate(10px, -20px);
  padding: 0.5rem 0.7rem;
  background: #eee;
  border-radius: 50%;
}

/* OVERLAY */
.overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background: rgb(0, 0, 0, 0.5);
  backdrop-filter: blur(3px);
  /* SET Z-INDEX ON .modal to 2. That way, the modal isn't blurred. */
  z-index: 1; 
}

/* DEFAULT STATE WHEN THE USER DOESN'T PRESS THE BUTTON. JS WILL BE USED TO CHANGE ITS STATE */
.hidden {
  display: none;
}
